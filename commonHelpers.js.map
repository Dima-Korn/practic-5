{"version":3,"file":"commonHelpers.js","sources":["../src/js/LS_helpers.js","../src/js/constants.js","../src/js/refs.js","../src/main.js"],"sourcesContent":["export function getLocalStorage(KEY) {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\nexport function setLocalStorage(KEY, arr) {\n  localStorage.setItem(KEY, JSON.stringify(arr));\n}\n","export const KEY = 'tasks';\n","export default {\n  form: document.querySelector('#task-form'),\n  listTag: document.querySelector('#task-list'),\n};\n","import { nanoid } from 'nanoid';\nimport { getLocalStorage, setLocalStorage } from './js/LS_helpers';\nimport { KEY } from './js/constants';\nimport refs from './js/refs';\nconst { form, listTag } = refs;\n\nlistTag.addEventListener('click', removeEl);\nform.addEventListener('submit', submitForm);\n\nfunction removeEl(event) {\n  if (event.target.nodeName !== 'BUTTON') return;\n  const deleteId = event.target.parentNode.id;\n  const data = getLocalStorage(KEY);\n  const dataFiltered = data.filter(obj => obj.id !== deleteId);\n  setLocalStorage(KEY, dataFiltered);\n  event.target.parentNode.remove();\n}\n\nfunction submitForm(event) {\n  event.preventDefault();\n  console.dir(event.currentTarget.elements.taskName.value);\n  const inputValue = event.currentTarget.elements.taskName.value.trim();\n  if (!inputValue) return;\n\n  addTask(inputValue);\n  event.currentTarget.reset();\n}\n\nfunction createMurkup(value, id) {\n  listTag.insertAdjacentHTML(\n    'beforeend',\n    `<li id='${id}'>${value} <button type=\"button\">X</button></li>`\n  );\n}\n\nfunction addTask(input) {\n  const arr = getLocalStorage() || [];\n  const id = nanoid();\n  console.log(id);\n  arr.push({ id, text: input });\n  setLocalStorage(KEY, arr);\n  createMurkup(input, id);\n}\n\n// Отримуємо з LS дані для розмітки\n\nfunction listMemory() {\n  const arr = getLocalStorage(KEY);\n  if (!arr) return;\n\n  const markupData = arr\n    .map(\n      ({ id, text }) =>\n        `<li id='${id}'>${text} <button type=\"button\">X</button></li>`\n    )\n    .join('');\n  listTag.insertAdjacentHTML('beforeend', markupData);\n}\n\nlistMemory();\n"],"names":["getLocalStorage","KEY","setLocalStorage","arr","refs","form","listTag","removeEl","submitForm","event","deleteId","dataFiltered","obj","inputValue","addTask","createMurkup","value","id","input","nanoid","listMemory","markupData","text"],"mappings":"svBAAO,SAASA,EAAgBC,EAAK,CACnC,OAAO,KAAK,MAAM,aAAa,QAAQA,CAAG,CAAC,CAC7C,CAEO,SAASC,EAAgBD,EAAKE,EAAK,CACxC,aAAa,QAAQF,EAAK,KAAK,UAAUE,CAAG,CAAC,CAC/C,CCNO,MAAMF,EAAM,QCAJG,EAAA,CACb,KAAM,SAAS,cAAc,YAAY,EACzC,QAAS,SAAS,cAAc,YAAY,CAC9C,ECCM,CAAE,KAAAC,EAAM,QAAAC,CAAS,EAAGF,EAE1BE,EAAQ,iBAAiB,QAASC,CAAQ,EAC1CF,EAAK,iBAAiB,SAAUG,CAAU,EAE1C,SAASD,EAASE,EAAO,CACvB,GAAIA,EAAM,OAAO,WAAa,SAAU,OACxC,MAAMC,EAAWD,EAAM,OAAO,WAAW,GAEnCE,EADOX,EAAgBC,CAAG,EACN,OAAOW,GAAOA,EAAI,KAAOF,CAAQ,EAC3DR,EAAgBD,EAAKU,CAAY,EACjCF,EAAM,OAAO,WAAW,QAC1B,CAEA,SAASD,EAAWC,EAAO,CACzBA,EAAM,eAAc,EACpB,QAAQ,IAAIA,EAAM,cAAc,SAAS,SAAS,KAAK,EACvD,MAAMI,EAAaJ,EAAM,cAAc,SAAS,SAAS,MAAM,OAC1DI,IAELC,EAAQD,CAAU,EAClBJ,EAAM,cAAc,QACtB,CAEA,SAASM,EAAaC,EAAOC,EAAI,CAC/BX,EAAQ,mBACN,YACA,WAAWW,CAAE,KAAKD,CAAK,wCAC3B,CACA,CAEA,SAASF,EAAQI,EAAO,CACtB,MAAMf,EAAMH,EAAiB,GAAI,GAC3BiB,EAAKE,IACX,QAAQ,IAAIF,CAAE,EACdd,EAAI,KAAK,CAAE,GAAAc,EAAI,KAAMC,CAAO,CAAA,EAC5BhB,EAAgBD,EAAKE,CAAG,EACxBY,EAAaG,EAAOD,CAAE,CACxB,CAIA,SAASG,GAAa,CACpB,MAAMjB,EAAMH,EAAgBC,CAAG,EAC/B,GAAI,CAACE,EAAK,OAEV,MAAMkB,EAAalB,EAChB,IACC,CAAC,CAAE,GAAAc,EAAI,KAAAK,CAAM,IACX,WAAWL,CAAE,KAAKK,CAAI,wCACzB,EACA,KAAK,EAAE,EACVhB,EAAQ,mBAAmB,YAAae,CAAU,CACpD,CAEAD,EAAY"}